-- binary
04 01 # version / type
00 0f # length
12 34 56 78 # xid
00 04 # err_type
00 08 # code
61 62 63 # data
-- python
ofp.message.bad_match_error_msg(
    xid=0x12345678,
    code=ofp.OFPBMC_BAD_MASK,
    data="abc")
-- python3
ofp.message.bad_match_error_msg(
    xid=0x12345678,
    code=ofp.OFPBMC_BAD_MASK,
    data=b"abc")
-- c
obj = of_bad_match_error_msg_new(OF_VERSION_1_3);
of_bad_match_error_msg_xid_set(obj, 0x12345678);
of_bad_match_error_msg_code_set(obj, OF_MATCH_FAILED_BAD_MASK_BY_VERSION(OF_VERSION_1_3));
of_octets_t data = { .bytes=3, .data=(uint8_t *)"\x61\x62\x63" };
of_bad_match_error_msg_data_set(obj, &data);
-- java
builder.setXid(0x12345678)
    .setCode(OFBadMatchCode.BAD_MASK)
    .setData(OFErrorCauseData.of(new byte[] { 0x61, 0x62, 0x63 }, OFVersion.OF_13));

# Copyright 2013, Big Switch Networks, Inc.
#
# LoxiGen is licensed under the Eclipse Public License, version 1.0 (EPL), with
# the following special exception:
#
# LOXI Exception
#
# As a special exception to the terms of the EPL, you may distribute libraries
# generated by LoxiGen (LoxiGen Libraries) under the terms of your choice, provided
# that copyright and licensing notices generated by LoxiGen are not altered or removed
# from the LoxiGen Libraries and the notice provided below is (i) included in
# the LoxiGen Libraries, if distributed in source code form and (ii) included in any
# documentation for the LoxiGen Libraries, if distributed in binary form.
#
# Notice: "Copyright 2013, Big Switch Networks, Inc. This library was generated by the LoxiGen Compiler."
#
# You may not use this file except in compliance with the EPL or LOXI Exception. You may obtain
# a copy of the EPL at:
#
# http://www.eclipse.org/legal/epl-v10.html
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# EPL for the specific language governing permissions and limitations
# under the EPL.

from loxi_ir import *
from collections import OrderedDict

#######################################################################
### OFVersion registry
#######################################################################

class OFVersions:
    VERSION_1_0 = OFVersion("1.0", 1)
    VERSION_1_1 = OFVersion("1.1", 2)
    VERSION_1_2 = OFVersion("1.2", 3)
    VERSION_1_3 = OFVersion("1.3", 4)

    all_supported = (
        VERSION_1_0,
        VERSION_1_1,
        VERSION_1_2,
        VERSION_1_3,
    )

    wire_version_map   = { v.wire_version : v for v in all_supported }
    version_string_map = { v.version      : v for v in all_supported }

    target_versions = []

    @staticmethod
    def from_wire(w):
        return OFVersions.wire_version_map[w]

    @staticmethod
    def from_string(s):
        return OFVersions.version_string_map[s]

    @staticmethod
    def from_strings(*strings):
        return tuple(OFVersions.version_string_map[s] for s in strings)




#######################################################################
### OFVersions
#######################################################################

# map OFVersion -> OFProtocol
ir = OrderedDict()
